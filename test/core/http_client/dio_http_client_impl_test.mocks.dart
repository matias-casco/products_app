// Mocks generated by Mockito 5.4.5 from annotations
// in products_app/test/core/http_client/dio_http_client_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:products_app/core/http_client/http_client_interface.dart'
    as _i4;
import 'package:products_app/products/data/models/products/product_model.dart'
    as _i7;
import 'package:products_app/products/data/models/products/products_model.dart'
    as _i6;
import 'package:products_app/products/domain/entities/products/products.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T1> extends _i1.SmartFake implements _i2.Future<T1> {
  _FakeFuture_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProducts_1 extends _i1.SmartFake implements _i3.Products {
  _FakeProducts_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HttpClientInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClientInterface extends _i1.Mock
    implements _i4.HttpClientInterface {
  @override
  _i2.Future<T> getRequest<T>(
    String? url, {
    required _i4.ResponseConverter<T>? converter,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getRequest,
              [url],
              {
                #converter: converter,
                #queryParameters: queryParameters,
                #headers: headers,
              },
            ),
            returnValue:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #getRequest,
                      [url],
                      {
                        #converter: converter,
                        #queryParameters: queryParameters,
                        #headers: headers,
                      },
                    ),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(
                  this,
                  Invocation.method(
                    #getRequest,
                    [url],
                    {
                      #converter: converter,
                      #queryParameters: queryParameters,
                      #headers: headers,
                    },
                  ),
                ),
            returnValueForMissingStub:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #getRequest,
                      [url],
                      {
                        #converter: converter,
                        #queryParameters: queryParameters,
                        #headers: headers,
                      },
                    ),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(
                  this,
                  Invocation.method(
                    #getRequest,
                    [url],
                    {
                      #converter: converter,
                      #queryParameters: queryParameters,
                      #headers: headers,
                    },
                  ),
                ),
          )
          as _i2.Future<T>);

  @override
  _i2.Future<T> postRequest<T>(
    String? url, {
    required _i4.ResponseConverter<T>? converter,
    Map<String, dynamic>? data,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postRequest,
              [url],
              {#converter: converter, #data: data, #headers: headers},
            ),
            returnValue:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #postRequest,
                      [url],
                      {#converter: converter, #data: data, #headers: headers},
                    ),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(
                  this,
                  Invocation.method(
                    #postRequest,
                    [url],
                    {#converter: converter, #data: data, #headers: headers},
                  ),
                ),
            returnValueForMissingStub:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #postRequest,
                      [url],
                      {#converter: converter, #data: data, #headers: headers},
                    ),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(
                  this,
                  Invocation.method(
                    #postRequest,
                    [url],
                    {#converter: converter, #data: data, #headers: headers},
                  ),
                ),
          )
          as _i2.Future<T>);

  @override
  _i2.Future<T> putRequest<T>(
    String? url, {
    required _i4.ResponseConverter<T>? converter,
    Map<String, dynamic>? data,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putRequest,
              [url],
              {#converter: converter, #data: data, #headers: headers},
            ),
            returnValue:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #putRequest,
                      [url],
                      {#converter: converter, #data: data, #headers: headers},
                    ),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(
                  this,
                  Invocation.method(
                    #putRequest,
                    [url],
                    {#converter: converter, #data: data, #headers: headers},
                  ),
                ),
            returnValueForMissingStub:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #putRequest,
                      [url],
                      {#converter: converter, #data: data, #headers: headers},
                    ),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(
                  this,
                  Invocation.method(
                    #putRequest,
                    [url],
                    {#converter: converter, #data: data, #headers: headers},
                  ),
                ),
          )
          as _i2.Future<T>);

  @override
  _i2.Future<T> deleteRequest<T>(
    String? url, {
    required _i4.ResponseConverter<T>? converter,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRequest, [url], {#converter: converter}),
            returnValue:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #deleteRequest,
                      [url],
                      {#converter: converter},
                    ),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(
                  this,
                  Invocation.method(
                    #deleteRequest,
                    [url],
                    {#converter: converter},
                  ),
                ),
            returnValueForMissingStub:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #deleteRequest,
                      [url],
                      {#converter: converter},
                    ),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(
                  this,
                  Invocation.method(
                    #deleteRequest,
                    [url],
                    {#converter: converter},
                  ),
                ),
          )
          as _i2.Future<T>);
}

/// A class which mocks [ProductsModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsModel extends _i1.Mock implements _i6.ProductsModel {
  @override
  List<_i7.ProductModel> get products =>
      (super.noSuchMethod(
            Invocation.getter(#products),
            returnValue: <_i7.ProductModel>[],
            returnValueForMissingStub: <_i7.ProductModel>[],
          )
          as List<_i7.ProductModel>);

  @override
  int get total =>
      (super.noSuchMethod(
            Invocation.getter(#total),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  int get skip =>
      (super.noSuchMethod(
            Invocation.getter(#skip),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  int get limit =>
      (super.noSuchMethod(
            Invocation.getter(#limit),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i3.Products toEntity() =>
      (super.noSuchMethod(
            Invocation.method(#toEntity, []),
            returnValue: _FakeProducts_1(
              this,
              Invocation.method(#toEntity, []),
            ),
            returnValueForMissingStub: _FakeProducts_1(
              this,
              Invocation.method(#toEntity, []),
            ),
          )
          as _i3.Products);
}
