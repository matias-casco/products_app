// Mocks generated by Mockito 5.4.4 from annotations
// in products_app/test/unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:fpdart/fpdart.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:products_app/core/errors/failures.dart' as _i10;
import 'package:products_app/core/http_client/http_client_interface.dart'
    as _i5;
import 'package:products_app/products/data/datasources/products_datasource.dart'
    as _i7;
import 'package:products_app/products/data/models/product_model.dart' as _i11;
import 'package:products_app/products/data/models/products_model.dart' as _i3;
import 'package:products_app/products/domain/entities/products.dart' as _i4;
import 'package:products_app/products/domain/repositories/products_repository.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T1> extends _i1.SmartFake implements _i2.Future<T1> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductsModel_1 extends _i1.SmartFake implements _i3.ProductsModel {
  _FakeProductsModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProducts_2 extends _i1.SmartFake implements _i4.Products {
  _FakeProducts_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpClientInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClientInterface extends _i1.Mock
    implements _i5.HttpClientInterface {
  @override
  _i2.Future<T> getRequest<T>(
    String? url, {
    required _i5.ResponseConverter<T>? converter,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequest,
          [url],
          {
            #converter: converter,
            #queryParameters: queryParameters,
            #headers: headers,
          },
        ),
        returnValue: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #getRequest,
                  [url],
                  {
                    #converter: converter,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #getRequest,
                [url],
                {
                  #converter: converter,
                  #queryParameters: queryParameters,
                  #headers: headers,
                },
              ),
            ),
        returnValueForMissingStub: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #getRequest,
                  [url],
                  {
                    #converter: converter,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #getRequest,
                [url],
                {
                  #converter: converter,
                  #queryParameters: queryParameters,
                  #headers: headers,
                },
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<T> postRequest<T>(
    String? url, {
    required _i5.ResponseConverter<T>? converter,
    Map<String, dynamic>? data,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postRequest,
          [url],
          {
            #converter: converter,
            #data: data,
            #headers: headers,
          },
        ),
        returnValue: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #postRequest,
                  [url],
                  {
                    #converter: converter,
                    #data: data,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #postRequest,
                [url],
                {
                  #converter: converter,
                  #data: data,
                  #headers: headers,
                },
              ),
            ),
        returnValueForMissingStub: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #postRequest,
                  [url],
                  {
                    #converter: converter,
                    #data: data,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #postRequest,
                [url],
                {
                  #converter: converter,
                  #data: data,
                  #headers: headers,
                },
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<T> putRequest<T>(
    String? url, {
    required _i5.ResponseConverter<T>? converter,
    Map<String, dynamic>? data,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putRequest,
          [url],
          {
            #converter: converter,
            #data: data,
            #headers: headers,
          },
        ),
        returnValue: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #putRequest,
                  [url],
                  {
                    #converter: converter,
                    #data: data,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #putRequest,
                [url],
                {
                  #converter: converter,
                  #data: data,
                  #headers: headers,
                },
              ),
            ),
        returnValueForMissingStub: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #putRequest,
                  [url],
                  {
                    #converter: converter,
                    #data: data,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #putRequest,
                [url],
                {
                  #converter: converter,
                  #data: data,
                  #headers: headers,
                },
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<T> deleteRequest<T>(
    String? url, {
    required _i5.ResponseConverter<T>? converter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteRequest,
          [url],
          {#converter: converter},
        ),
        returnValue: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #deleteRequest,
                  [url],
                  {#converter: converter},
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #deleteRequest,
                [url],
                {#converter: converter},
              ),
            ),
        returnValueForMissingStub: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #deleteRequest,
                  [url],
                  {#converter: converter},
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #deleteRequest,
                [url],
                {#converter: converter},
              ),
            ),
      ) as _i2.Future<T>);
}

/// A class which mocks [ProductsDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsDatasource extends _i1.Mock
    implements _i7.ProductsDatasource {
  @override
  _i2.Future<_i3.ProductsModel> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: _i2.Future<_i3.ProductsModel>.value(_FakeProductsModel_1(
          this,
          Invocation.method(
            #getProducts,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i2.Future<_i3.ProductsModel>.value(_FakeProductsModel_1(
          this,
          Invocation.method(
            #getProducts,
            [],
          ),
        )),
      ) as _i2.Future<_i3.ProductsModel>);
}

/// A class which mocks [ProductsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsRepository extends _i1.Mock
    implements _i8.ProductsRepository {
  @override
  _i2.Future<_i9.Either<_i10.Failure, _i4.Products>> getProducts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: _i2.Future<_i9.Either<_i10.Failure, _i4.Products>>.value(
            _i6.dummyValue<_i9.Either<_i10.Failure, _i4.Products>>(
          this,
          Invocation.method(
            #getProducts,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i2.Future<_i9.Either<_i10.Failure, _i4.Products>>.value(
                _i6.dummyValue<_i9.Either<_i10.Failure, _i4.Products>>(
          this,
          Invocation.method(
            #getProducts,
            [],
          ),
        )),
      ) as _i2.Future<_i9.Either<_i10.Failure, _i4.Products>>);
}

/// A class which mocks [ProductsModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsModel extends _i1.Mock implements _i3.ProductsModel {
  @override
  List<_i11.ProductModel> get products => (super.noSuchMethod(
        Invocation.getter(#products),
        returnValue: <_i11.ProductModel>[],
        returnValueForMissingStub: <_i11.ProductModel>[],
      ) as List<_i11.ProductModel>);

  @override
  int get total => (super.noSuchMethod(
        Invocation.getter(#total),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get skip => (super.noSuchMethod(
        Invocation.getter(#skip),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get limit => (super.noSuchMethod(
        Invocation.getter(#limit),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i4.Products toEntity() => (super.noSuchMethod(
        Invocation.method(
          #toEntity,
          [],
        ),
        returnValue: _FakeProducts_2(
          this,
          Invocation.method(
            #toEntity,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeProducts_2(
          this,
          Invocation.method(
            #toEntity,
            [],
          ),
        ),
      ) as _i4.Products);
}
